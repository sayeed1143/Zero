import React, { useCallback } from 'react';
import ReactFlow, {
  MiniMap,
  Controls,
  Background,
  useNodesState,
  useEdgesState,
  addEdge,
  Connection,
  Edge,
} from 'reactflow';
import { Button } from '../ui/button';
import { Download, Image } from 'lucide-react';
import { toast } from '../ui/sonner';

const initialNodes = [
  { id: '1', position: { x: 0, y: 0 }, data: { label: 'Photosynthesis PDF' }, type: 'input' },
  { id: '2', position: { x: 250, y: 0 }, data: { label: 'Sunlight' } },
  { id: '3', position: { x: 250, y: 100 }, data: { label: 'Chlorophyll' } },
  { id: '4', position: { x: 500, y: 50 }, data: { label: 'Glucose' }, type: 'output' },
  { id: '5', position: { x: 500, y: 150 }, data: { label: 'Oxygen' }, type: 'output' },
];

const initialEdges = [
    { id: 'e1-2', source: '1', target: '2', animated: true },
    { id: 'e1-3', source: '1', target: '3', animated: true },
    { id: 'e2-4', source: '2', target: '4' },
    { id: 'e3-4', source: '3', target: '4' },
    { id: 'e3-5', source: '3', target: '5' },
];

const Canvas = () => {
  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);
  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);

  const onConnect = useCallback(
    (params: Edge | Connection) => setEdges((eds) => addEdge(params, eds)),
    [setEdges],
  );

  const handleExport = (type: 'PNG' | 'PDF') => {
      toast.info(`Exporting as ${type}`, {
          description: "This feature would be fully implemented with a backend service."
      })
  }

  return (
    <div className="flex-1 relative bg-background">
      <ReactFlow
        nodes={nodes}
        edges={edges}
        onNodesChange={onNodesChange}
        onEdgesChange={onEdgesChange}
        onConnect={onConnect}
        fitView
      >
        <Controls />
        <MiniMap />
        <Background gap={12} size={1} />
      </ReactFlow>
      <div className="absolute top-4 right-4 flex gap-2">
        <Button variant="outline" size="sm" onClick={() => handleExport('PNG')}>
            <Image className="w-4 h-4 mr-2" />
            Export PNG
        </Button>
        <Button variant="outline" size="sm" onClick={() => handleExport('PDF')}>
            <Download className="w-4 h-4 mr-2" />
            Export PDF
        </Button>
      </div>
    </div>
  );
};

export default Canvas;
